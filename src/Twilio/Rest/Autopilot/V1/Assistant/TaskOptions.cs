/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Autopilot.V1.Assistant
{

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// FetchTaskOptions
  /// </summary>
  public class FetchTaskOptions : IOptions<TaskResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the resource to fetch
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The unique string that identifies the resource to fetch
    /// </summary>
    public string PathSid { get; }

    /// <summary>
    /// Construct a new FetchTaskOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the resource to fetch </param>
    /// <param name="pathSid"> The unique string that identifies the resource to fetch </param>
    public FetchTaskOptions(string pathAssistantSid, string pathSid)
    {
      PathAssistantSid = pathAssistantSid;
      PathSid = pathSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// ReadTaskOptions
  /// </summary>
  public class ReadTaskOptions : ReadOptions<TaskResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the resources to read
    /// </summary>
    public string PathAssistantSid { get; }

    /// <summary>
    /// Construct a new ReadTaskOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the resources to read </param>
    public ReadTaskOptions(string pathAssistantSid)
    {
      PathAssistantSid = pathAssistantSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public override List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      if (PageSize != null)
      {
        p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
      }

      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// CreateTaskOptions
  /// </summary>
  public class CreateTaskOptions : IOptions<TaskResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the new resource
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// An application-defined string that uniquely identifies the resource
    /// </summary>
    public string UniqueName { get; }
    /// <summary>
    ///  descriptive string that you create to describe the new resource
    /// </summary>
    public string FriendlyName { get; set; }
    /// <summary>
    /// The JSON string that specifies the actions that instruct the Assistant on how to perform the task
    /// </summary>
    public object Actions { get; set; }
    /// <summary>
    /// The URL from which the Assistant can fetch actions
    /// </summary>
    public Uri ActionsUrl { get; set; }

    /// <summary>
    /// Construct a new CreateTaskOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the new resource </param>
    /// <param name="uniqueName"> An application-defined string that uniquely identifies the resource </param>
    public CreateTaskOptions(string pathAssistantSid, string uniqueName)
    {
      PathAssistantSid = pathAssistantSid;
      UniqueName = uniqueName;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      if (UniqueName != null)
      {
        p.Add(new KeyValuePair<string, string>("UniqueName", UniqueName));
      }

      if (FriendlyName != null)
      {
        p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
      }

      if (Actions != null)
      {
        p.Add(new KeyValuePair<string, string>("Actions", Serializers.JsonObject(Actions)));
      }

      if (ActionsUrl != null)
      {
        p.Add(new KeyValuePair<string, string>("ActionsUrl", Serializers.Url(ActionsUrl)));
      }

      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// UpdateTaskOptions
  /// </summary>
  public class UpdateTaskOptions : IOptions<TaskResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the resource to update
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The unique string that identifies the resource
    /// </summary>
    public string PathSid { get; }
    /// <summary>
    /// A string to describe the resource
    /// </summary>
    public string FriendlyName { get; set; }
    /// <summary>
    /// An application-defined string that uniquely identifies the resource
    /// </summary>
    public string UniqueName { get; set; }
    /// <summary>
    /// The JSON string that specifies the actions that instruct the Assistant on how to perform the task
    /// </summary>
    public object Actions { get; set; }
    /// <summary>
    /// The URL from which the Assistant can fetch actions
    /// </summary>
    public Uri ActionsUrl { get; set; }

    /// <summary>
    /// Construct a new UpdateTaskOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the resource to update </param>
    /// <param name="pathSid"> The unique string that identifies the resource </param>
    public UpdateTaskOptions(string pathAssistantSid, string pathSid)
    {
      PathAssistantSid = pathAssistantSid;
      PathSid = pathSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      if (FriendlyName != null)
      {
        p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
      }

      if (UniqueName != null)
      {
        p.Add(new KeyValuePair<string, string>("UniqueName", UniqueName));
      }

      if (Actions != null)
      {
        p.Add(new KeyValuePair<string, string>("Actions", Serializers.JsonObject(Actions)));
      }

      if (ActionsUrl != null)
      {
        p.Add(new KeyValuePair<string, string>("ActionsUrl", Serializers.Url(ActionsUrl)));
      }

      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// DeleteTaskOptions
  /// </summary>
  public class DeleteTaskOptions : IOptions<TaskResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the resources to delete
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The unique string that identifies the resource to delete
    /// </summary>
    public string PathSid { get; }

    /// <summary>
    /// Construct a new DeleteTaskOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the resources to delete </param>
    /// <param name="pathSid"> The unique string that identifies the resource to delete </param>
    public DeleteTaskOptions(string pathAssistantSid, string pathSid)
    {
      PathAssistantSid = pathAssistantSid;
      PathSid = pathSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      return p;
    }
  }

}