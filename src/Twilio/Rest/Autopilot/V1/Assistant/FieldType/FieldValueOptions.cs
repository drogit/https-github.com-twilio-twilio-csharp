/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Autopilot.V1.Assistant.FieldType
{

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// FetchFieldValueOptions
  /// </summary>
  public class FetchFieldValueOptions : IOptions<FieldValueResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the FieldType associated with the resource to fetch
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The SID of the Field Type associated with  the Field Value to fetch
    /// </summary>
    public string PathFieldTypeSid { get; }
    /// <summary>
    /// The unique string that identifies the resource
    /// </summary>
    public string PathSid { get; }

    /// <summary>
    /// Construct a new FetchFieldValueOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the FieldType associated with the
    ///                        resource to fetch </param>
    /// <param name="pathFieldTypeSid"> The SID of the Field Type associated with  the Field Value to fetch </param>
    /// <param name="pathSid"> The unique string that identifies the resource </param>
    public FetchFieldValueOptions(string pathAssistantSid, string pathFieldTypeSid, string pathSid)
    {
      PathAssistantSid = pathAssistantSid;
      PathFieldTypeSid = pathFieldTypeSid;
      PathSid = pathSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// ReadFieldValueOptions
  /// </summary>
  public class ReadFieldValueOptions : ReadOptions<FieldValueResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the FieldType associated with the resources to read
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The SID of the Field Type associated with the Field Value to read
    /// </summary>
    public string PathFieldTypeSid { get; }
    /// <summary>
    /// The ISO language-country tag that identifies the language of the value
    /// </summary>
    public string Language { get; set; }

    /// <summary>
    /// Construct a new ReadFieldValueOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the FieldType associated with the
    ///                        resources to read </param>
    /// <param name="pathFieldTypeSid"> The SID of the Field Type associated with the Field Value to read </param>
    public ReadFieldValueOptions(string pathAssistantSid, string pathFieldTypeSid)
    {
      PathAssistantSid = pathAssistantSid;
      PathFieldTypeSid = pathFieldTypeSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public override List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      if (Language != null)
      {
        p.Add(new KeyValuePair<string, string>("Language", Language));
      }

      if (PageSize != null)
      {
        p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
      }

      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// CreateFieldValueOptions
  /// </summary>
  public class CreateFieldValueOptions : IOptions<FieldValueResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the FieldType associated with the new resource
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The SID of the Field Type associated with the Field Value
    /// </summary>
    public string PathFieldTypeSid { get; }
    /// <summary>
    /// The ISO language-country tag that identifies the language of the value
    /// </summary>
    public string Language { get; }
    /// <summary>
    /// The Field Value data
    /// </summary>
    public string Value { get; }
    /// <summary>
    /// The string value that indicates which word the field value is a synonym of
    /// </summary>
    public string SynonymOf { get; set; }

    /// <summary>
    /// Construct a new CreateFieldValueOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the FieldType associated with the
    ///                        new resource </param>
    /// <param name="pathFieldTypeSid"> The SID of the Field Type associated with the Field Value </param>
    /// <param name="language"> The ISO language-country tag that identifies the language of the value </param>
    /// <param name="value"> The Field Value data </param>
    public CreateFieldValueOptions(string pathAssistantSid, string pathFieldTypeSid, string language, string value)
    {
      PathAssistantSid = pathAssistantSid;
      PathFieldTypeSid = pathFieldTypeSid;
      Language = language;
      Value = value;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      if (Language != null)
      {
        p.Add(new KeyValuePair<string, string>("Language", Language));
      }

      if (Value != null)
      {
        p.Add(new KeyValuePair<string, string>("Value", Value));
      }

      if (SynonymOf != null)
      {
        p.Add(new KeyValuePair<string, string>("SynonymOf", SynonymOf.ToString()));
      }

      return p;
    }
  }

  /// <summary>
  /// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
  /// currently do not have developer preview access, please contact help@twilio.com.
  ///
  /// DeleteFieldValueOptions
  /// </summary>
  public class DeleteFieldValueOptions : IOptions<FieldValueResource>
  {
    /// <summary>
    /// The SID of the Assistant that is the parent of the FieldType associated with the resources to delete
    /// </summary>
    public string PathAssistantSid { get; }
    /// <summary>
    /// The SID of the Field Type associated with the Field Value to delete
    /// </summary>
    public string PathFieldTypeSid { get; }
    /// <summary>
    /// The unique string that identifies the resource
    /// </summary>
    public string PathSid { get; }

    /// <summary>
    /// Construct a new DeleteFieldValueOptions
    /// </summary>
    /// <param name="pathAssistantSid"> The SID of the Assistant that is the parent of the FieldType associated with the
    ///                        resources to delete </param>
    /// <param name="pathFieldTypeSid"> The SID of the Field Type associated with the Field Value to delete </param>
    /// <param name="pathSid"> The unique string that identifies the resource </param>
    public DeleteFieldValueOptions(string pathAssistantSid, string pathFieldTypeSid, string pathSid)
    {
      PathAssistantSid = pathAssistantSid;
      PathFieldTypeSid = pathFieldTypeSid;
      PathSid = pathSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      return p;
    }
  }

}