/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// ExportAssistantResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;

namespace Twilio.Rest.Autopilot.V1.Assistant
{

    public class ExportAssistantResource : Resource
    {
        public sealed class StatusEnum : StringEnum
        {
            private StatusEnum(string value) : base(value) {}
            public StatusEnum() {}
            public static implicit operator StatusEnum(string value)
            {
                return new StatusEnum(value);
            }

            public static readonly StatusEnum Completed = new StatusEnum("completed");
            public static readonly StatusEnum Failed = new StatusEnum("failed");
        }

        private static Request BuildFetchRequest(FetchExportAssistantOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Autopilot,
                "/v1/Assistants/" + options.PathAssistantSid + "/Export",
                queryParams: options.GetParams()
            );
        }

        /// <summary>
        /// Returns the Assistant exported as a JSON Object.
        /// </summary>
        /// <param name="options"> Fetch ExportAssistant parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ExportAssistant </returns>
        public static ExportAssistantResource Fetch(FetchExportAssistantOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Returns the Assistant exported as a JSON Object.
        /// </summary>
        /// <param name="options"> Fetch ExportAssistant parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ExportAssistant </returns>
        public static async System.Threading.Tasks.Task<ExportAssistantResource> FetchAsync(FetchExportAssistantOptions options,
                                                                                            ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Returns the Assistant exported as a JSON Object.
        /// </summary>
        /// <param name="pathAssistantSid"> The SID of the Assistant to export. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ExportAssistant </returns>
        public static ExportAssistantResource Fetch(string pathAssistantSid, ITwilioRestClient client = null)
        {
            var options = new FetchExportAssistantOptions(pathAssistantSid);
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary>
        /// Returns the Assistant exported as a JSON Object.
        /// </summary>
        /// <param name="pathAssistantSid"> The SID of the Assistant to export. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ExportAssistant </returns>
        public static async System.Threading.Tasks.Task<ExportAssistantResource> FetchAsync(string pathAssistantSid,
                                                                                            ITwilioRestClient client = null)
        {
            var options = new FetchExportAssistantOptions(pathAssistantSid);
            return await FetchAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a ExportAssistantResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> ExportAssistantResource object represented by the provided JSON </returns>
        public static ExportAssistantResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<ExportAssistantResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The SID of the Account that created the resource
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The SID of the Assistant to export.
        /// </summary>
        [JsonProperty("assistant_sid")]
        public string AssistantSid { get; private set; }
        /// <summary>
        /// The RFC 2822 date and time in GMT when the resource was created
        /// </summary>
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }
        /// <summary>
        /// The status of the export
        /// </summary>
        [JsonProperty("status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public ExportAssistantResource.StatusEnum Status { get; private set; }
        /// <summary>
        /// More information about why the export failed, if `status` is `failed`
        /// </summary>
        [JsonProperty("error_code")]
        public int? ErrorCode { get; private set; }
        /// <summary>
        /// The absolute URL of the Export resource.
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }
        /// <summary>
        /// The JSON string that describes the requested Assistant.
        /// </summary>
        [JsonProperty("schema")]
        public object Schema { get; private set; }

        private ExportAssistantResource()
        {

        }
    }

}