/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
///
/// ArchivedCallResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Voice.V1
{

    public class ArchivedCallResource : Resource
    {
        private static Request BuildDeleteRequest(DeleteArchivedCallOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Delete,
                Rest.Domain.Voice,
                "/v1/Archives/" + (options.PathDate.Value.ToString("yyyy-MM-dd")) + "/Calls/" + options.PathSid + "",
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// Delete an archived call record from Bulk Export. Note: this does not also delete the record from the Voice API.
        /// </summary>
        /// <param name="options"> Delete ArchivedCall parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ArchivedCall </returns>
        public static bool Delete(DeleteArchivedCallOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildDeleteRequest(options, client));
            return response.StatusCode == System.Net.HttpStatusCode.NoContent;
        }

        #if !NET35
        /// <summary>
        /// Delete an archived call record from Bulk Export. Note: this does not also delete the record from the Voice API.
        /// </summary>
        /// <param name="options"> Delete ArchivedCall parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ArchivedCall </returns>
        public static async System.Threading.Tasks.Task<bool> DeleteAsync(DeleteArchivedCallOptions options,
                                                                          ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildDeleteRequest(options, client));
            return response.StatusCode == System.Net.HttpStatusCode.NoContent;
        }
        #endif

        /// <summary>
        /// Delete an archived call record from Bulk Export. Note: this does not also delete the record from the Voice API.
        /// </summary>
        /// <param name="pathDate"> The date of the Call in UTC. </param>
        /// <param name="pathSid"> The unique string that identifies this resource </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ArchivedCall </returns>
        public static bool Delete(DateTime? pathDate, string pathSid, ITwilioRestClient client = null)
        {
            var options = new DeleteArchivedCallOptions(pathDate, pathSid);
            return Delete(options, client);
        }

        #if !NET35
        /// <summary>
        /// Delete an archived call record from Bulk Export. Note: this does not also delete the record from the Voice API.
        /// </summary>
        /// <param name="pathDate"> The date of the Call in UTC. </param>
        /// <param name="pathSid"> The unique string that identifies this resource </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ArchivedCall </returns>
        public static async System.Threading.Tasks.Task<bool> DeleteAsync(DateTime? pathDate,
                                                                          string pathSid,
                                                                          ITwilioRestClient client = null)
        {
            var options = new DeleteArchivedCallOptions(pathDate, pathSid);
            return await DeleteAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a ArchivedCallResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> ArchivedCallResource object represented by the provided JSON </returns>
        public static ArchivedCallResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<ArchivedCallResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// date
        /// </summary>
        [JsonProperty("date")]
        public DateTime? Date { get; private set; }
        /// <summary>
        /// sid
        /// </summary>
        [JsonProperty("sid")]
        public string Sid { get; private set; }
        /// <summary>
        /// The absolute URL of the resource
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        private ArchivedCallResource()
        {

        }
    }

}