/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// HighriskSpecialPrefixResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Voice.V1.DialingPermissions.Country
{

    public class HighriskSpecialPrefixResource : Resource
    {
        private static Request BuildReadRequest(ReadHighriskSpecialPrefixOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Voice,
                "/v1/DialingPermissions/Countries/" + options.PathIsoCode + "/HighRiskSpecialPrefixes",
                queryParams: options.GetParams()
            );
        }

        /// <summary>
        /// Fetch the high-risk special services prefixes from the country resource corresponding to the [ISO country
        /// code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        /// </summary>
        /// <param name="options"> Read HighriskSpecialPrefix parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of HighriskSpecialPrefix </returns>
        public static ResourceSet<HighriskSpecialPrefixResource> Read(ReadHighriskSpecialPrefixOptions options,
                                                                      ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildReadRequest(options, client));

            var page = Page<HighriskSpecialPrefixResource>.FromJson("content", response.Content);
            return new ResourceSet<HighriskSpecialPrefixResource>(page, options, client);
        }

        #if !NET35
        /// <summary>
        /// Fetch the high-risk special services prefixes from the country resource corresponding to the [ISO country
        /// code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        /// </summary>
        /// <param name="options"> Read HighriskSpecialPrefix parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of HighriskSpecialPrefix </returns>
        public static async System.Threading.Tasks.Task<ResourceSet<HighriskSpecialPrefixResource>> ReadAsync(ReadHighriskSpecialPrefixOptions options,
                                                                                                              ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildReadRequest(options, client));

            var page = Page<HighriskSpecialPrefixResource>.FromJson("content", response.Content);
            return new ResourceSet<HighriskSpecialPrefixResource>(page, options, client);
        }
        #endif

        /// <summary>
        /// Fetch the high-risk special services prefixes from the country resource corresponding to the [ISO country
        /// code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        /// </summary>
        /// <param name="pathIsoCode"> The ISO 3166-1 country code </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of HighriskSpecialPrefix </returns>
        public static ResourceSet<HighriskSpecialPrefixResource> Read(string pathIsoCode,
                                                                      int? pageSize = null,
                                                                      long? limit = null,
                                                                      ITwilioRestClient client = null)
        {
            var options = new ReadHighriskSpecialPrefixOptions(pathIsoCode){PageSize = pageSize, Limit = limit};
            return Read(options, client);
        }

        #if !NET35
        /// <summary>
        /// Fetch the high-risk special services prefixes from the country resource corresponding to the [ISO country
        /// code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        /// </summary>
        /// <param name="pathIsoCode"> The ISO 3166-1 country code </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of HighriskSpecialPrefix </returns>
        public static async System.Threading.Tasks.Task<ResourceSet<HighriskSpecialPrefixResource>> ReadAsync(string pathIsoCode,
                                                                                                              int? pageSize = null,
                                                                                                              long? limit = null,
                                                                                                              ITwilioRestClient client = null)
        {
            var options = new ReadHighriskSpecialPrefixOptions(pathIsoCode){PageSize = pageSize, Limit = limit};
            return await ReadAsync(options, client);
        }
        #endif

        /// <summary>
        /// Fetch the target page of records
        /// </summary>
        /// <param name="targetUrl"> API-generated URL for the requested results page </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The target page of records </returns>
        public static Page<HighriskSpecialPrefixResource> GetPage(string targetUrl, ITwilioRestClient client)
        {
            client = client ?? TwilioClient.GetRestClient();

            var request = new Request(
                HttpMethod.Get,
                targetUrl
            );

            var response = client.Request(request);
            return Page<HighriskSpecialPrefixResource>.FromJson("content", response.Content);
        }

        /// <summary>
        /// Fetch the next page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The next page of records </returns>
        public static Page<HighriskSpecialPrefixResource> NextPage(Page<HighriskSpecialPrefixResource> page,
                                                                   ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetNextPageUrl(Rest.Domain.Voice)
            );

            var response = client.Request(request);
            return Page<HighriskSpecialPrefixResource>.FromJson("content", response.Content);
        }

        /// <summary>
        /// Fetch the previous page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The previous page of records </returns>
        public static Page<HighriskSpecialPrefixResource> PreviousPage(Page<HighriskSpecialPrefixResource> page,
                                                                       ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetPreviousPageUrl(Rest.Domain.Voice)
            );

            var response = client.Request(request);
            return Page<HighriskSpecialPrefixResource>.FromJson("content", response.Content);
        }

        /// <summary>
        /// Converts a JSON string into a HighriskSpecialPrefixResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> HighriskSpecialPrefixResource object represented by the provided JSON </returns>
        public static HighriskSpecialPrefixResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<HighriskSpecialPrefixResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// A prefix that includes the E.164 assigned country code
        /// </summary>
        [JsonProperty("prefix")]
        public string Prefix { get; private set; }

        private HighriskSpecialPrefixResource()
        {

        }
    }

}