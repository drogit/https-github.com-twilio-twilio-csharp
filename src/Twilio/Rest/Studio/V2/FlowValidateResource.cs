/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
///
/// FlowValidateResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;

namespace Twilio.Rest.Studio.V2
{

    public class FlowValidateResource : Resource
    {
        public sealed class StatusEnum : StringEnum
        {
            private StatusEnum(string value) : base(value) {}
            public StatusEnum() {}
            public static implicit operator StatusEnum(string value)
            {
                return new StatusEnum(value);
            }

            public static readonly StatusEnum Draft = new StatusEnum("draft");
            public static readonly StatusEnum Published = new StatusEnum("published");
        }

        private static Request BuildUpdateRequest(UpdateFlowValidateOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Studio,
                "/v2/Flows/Validate",
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// update
        /// </summary>
        /// <param name="options"> Update FlowValidate parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of FlowValidate </returns>
        public static FlowValidateResource Update(UpdateFlowValidateOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// update
        /// </summary>
        /// <param name="options"> Update FlowValidate parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of FlowValidate </returns>
        public static async System.Threading.Tasks.Task<FlowValidateResource> UpdateAsync(UpdateFlowValidateOptions options,
                                                                                          ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// update
        /// </summary>
        /// <param name="friendlyName"> The friendly_name </param>
        /// <param name="status"> The status </param>
        /// <param name="definition"> The definition </param>
        /// <param name="commitMessage"> The commit_message </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of FlowValidate </returns>
        public static FlowValidateResource Update(string friendlyName,
                                                  FlowValidateResource.StatusEnum status,
                                                  object definition,
                                                  string commitMessage = null,
                                                  ITwilioRestClient client = null)
        {
            var options = new UpdateFlowValidateOptions(friendlyName, status, definition){CommitMessage = commitMessage};
            return Update(options, client);
        }

        #if !NET35
        /// <summary>
        /// update
        /// </summary>
        /// <param name="friendlyName"> The friendly_name </param>
        /// <param name="status"> The status </param>
        /// <param name="definition"> The definition </param>
        /// <param name="commitMessage"> The commit_message </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of FlowValidate </returns>
        public static async System.Threading.Tasks.Task<FlowValidateResource> UpdateAsync(string friendlyName,
                                                                                          FlowValidateResource.StatusEnum status,
                                                                                          object definition,
                                                                                          string commitMessage = null,
                                                                                          ITwilioRestClient client = null)
        {
            var options = new UpdateFlowValidateOptions(friendlyName, status, definition){CommitMessage = commitMessage};
            return await UpdateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a FlowValidateResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> FlowValidateResource object represented by the provided JSON </returns>
        public static FlowValidateResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<FlowValidateResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The valid
        /// </summary>
        [JsonProperty("valid")]
        public bool? Valid { get; private set; }

        private FlowValidateResource()
        {

        }
    }

}