/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// ConfigurationResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Conversations.V1
{

    public class ConfigurationResource : Resource
    {
        private static Request BuildFetchRequest(FetchConfigurationOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Conversations,
                "/v1/Configuration",
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// Fetch the global configuration of conversations on your account
        /// </summary>
        /// <param name="options"> Fetch Configuration parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Configuration </returns>
        public static ConfigurationResource Fetch(FetchConfigurationOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Fetch the global configuration of conversations on your account
        /// </summary>
        /// <param name="options"> Fetch Configuration parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Configuration </returns>
        public static async System.Threading.Tasks.Task<ConfigurationResource> FetchAsync(FetchConfigurationOptions options,
                                                                                          ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Fetch the global configuration of conversations on your account
        /// </summary>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Configuration </returns>
        public static ConfigurationResource Fetch(ITwilioRestClient client = null)
        {
            var options = new FetchConfigurationOptions();
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary>
        /// Fetch the global configuration of conversations on your account
        /// </summary>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Configuration </returns>
        public static async System.Threading.Tasks.Task<ConfigurationResource> FetchAsync(ITwilioRestClient client = null)
        {
            var options = new FetchConfigurationOptions();
            return await FetchAsync(options, client);
        }
        #endif

        private static Request BuildUpdateRequest(UpdateConfigurationOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Conversations,
                "/v1/Configuration",
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// Update the global configuration of conversations on your account
        /// </summary>
        /// <param name="options"> Update Configuration parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Configuration </returns>
        public static ConfigurationResource Update(UpdateConfigurationOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Update the global configuration of conversations on your account
        /// </summary>
        /// <param name="options"> Update Configuration parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Configuration </returns>
        public static async System.Threading.Tasks.Task<ConfigurationResource> UpdateAsync(UpdateConfigurationOptions options,
                                                                                           ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Update the global configuration of conversations on your account
        /// </summary>
        /// <param name="defaultChatServiceSid"> The SID of the default Conversation Service that every new conversation will
        ///                             be associated with. </param>
        /// <param name="defaultMessagingServiceSid"> The SID of the default Messaging Service that every new conversation will
        ///                                  be associated with. </param>
        /// <param name="defaultInactiveTimer"> Default ISO8601 duration when conversation will be switched to `inactive`
        ///                            state. </param>
        /// <param name="defaultClosedTimer"> Default ISO8601 duration when conversation will be switched to `closed` state.
        ///                          </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of Configuration </returns>
        public static ConfigurationResource Update(string defaultChatServiceSid = null,
                                                   string defaultMessagingServiceSid = null,
                                                   string defaultInactiveTimer = null,
                                                   string defaultClosedTimer = null,
                                                   ITwilioRestClient client = null)
        {
            var options = new UpdateConfigurationOptions(){DefaultChatServiceSid = defaultChatServiceSid, DefaultMessagingServiceSid = defaultMessagingServiceSid, DefaultInactiveTimer = defaultInactiveTimer, DefaultClosedTimer = defaultClosedTimer};
            return Update(options, client);
        }

        #if !NET35
        /// <summary>
        /// Update the global configuration of conversations on your account
        /// </summary>
        /// <param name="defaultChatServiceSid"> The SID of the default Conversation Service that every new conversation will
        ///                             be associated with. </param>
        /// <param name="defaultMessagingServiceSid"> The SID of the default Messaging Service that every new conversation will
        ///                                  be associated with. </param>
        /// <param name="defaultInactiveTimer"> Default ISO8601 duration when conversation will be switched to `inactive`
        ///                            state. </param>
        /// <param name="defaultClosedTimer"> Default ISO8601 duration when conversation will be switched to `closed` state.
        ///                          </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of Configuration </returns>
        public static async System.Threading.Tasks.Task<ConfigurationResource> UpdateAsync(string defaultChatServiceSid = null,
                                                                                           string defaultMessagingServiceSid = null,
                                                                                           string defaultInactiveTimer = null,
                                                                                           string defaultClosedTimer = null,
                                                                                           ITwilioRestClient client = null)
        {
            var options = new UpdateConfigurationOptions(){DefaultChatServiceSid = defaultChatServiceSid, DefaultMessagingServiceSid = defaultMessagingServiceSid, DefaultInactiveTimer = defaultInactiveTimer, DefaultClosedTimer = defaultClosedTimer};
            return await UpdateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a ConfigurationResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> ConfigurationResource object represented by the provided JSON </returns>
        public static ConfigurationResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<ConfigurationResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The SID of the Account responsible for this configuration.
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The SID of the default Conversation Service that every new conversation is associated with.
        /// </summary>
        [JsonProperty("default_chat_service_sid")]
        public string DefaultChatServiceSid { get; private set; }
        /// <summary>
        /// The SID of the default Messaging Service that every new conversation is associated with.
        /// </summary>
        [JsonProperty("default_messaging_service_sid")]
        public string DefaultMessagingServiceSid { get; private set; }
        /// <summary>
        /// Default ISO8601 duration when conversation will be switched to `inactive` state.
        /// </summary>
        [JsonProperty("default_inactive_timer")]
        public string DefaultInactiveTimer { get; private set; }
        /// <summary>
        /// Default ISO8601 duration when conversation will be switched to `closed` state.
        /// </summary>
        [JsonProperty("default_closed_timer")]
        public string DefaultClosedTimer { get; private set; }
        /// <summary>
        /// An absolute URL for this global configuration.
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }
        /// <summary>
        /// Absolute URLs to access the webhook and default service configurations.
        /// </summary>
        [JsonProperty("links")]
        public Dictionary<string, string> Links { get; private set; }

        private ConfigurationResource()
        {

        }
    }

}