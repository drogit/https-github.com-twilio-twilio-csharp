/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Serverless.V1.Service
{

    /// <summary>
    /// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
    ///
    /// Retrieve a list of all Functions.
    /// </summary>
    public class ReadFunctionOptions : ReadOptions<FunctionResource>
    {
        /// <summary>
        /// The SID of the Service to read the Function resources from
        /// </summary>
        public string PathServiceSid { get; }

        /// <summary>
        /// Construct a new ReadFunctionOptions
        /// </summary>
        /// <param name="pathServiceSid"> The SID of the Service to read the Function resources from </param>
        public ReadFunctionOptions(string pathServiceSid)
        {
            PathServiceSid = pathServiceSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
    ///
    /// Retrieve a specific Function resource.
    /// </summary>
    public class FetchFunctionOptions : IOptions<FunctionResource>
    {
        /// <summary>
        /// The SID of the Service to fetch the Function resource from
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The SID of the Function resource to fetch
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new FetchFunctionOptions
        /// </summary>
        /// <param name="pathServiceSid"> The SID of the Service to fetch the Function resource from </param>
        /// <param name="pathSid"> The SID of the Function resource to fetch </param>
        public FetchFunctionOptions(string pathServiceSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
    ///
    /// Delete a Function resource.
    /// </summary>
    public class DeleteFunctionOptions : IOptions<FunctionResource>
    {
        /// <summary>
        /// The SID of the Service to delete the Function resource from
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The SID of the Function resource to delete
        /// </summary>
        public string PathSid { get; }

        /// <summary>
        /// Construct a new DeleteFunctionOptions
        /// </summary>
        /// <param name="pathServiceSid"> The SID of the Service to delete the Function resource from </param>
        /// <param name="pathSid"> The SID of the Function resource to delete </param>
        public DeleteFunctionOptions(string pathServiceSid, string pathSid)
        {
            PathServiceSid = pathServiceSid;
            PathSid = pathSid;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
    ///
    /// Create a new Function resource.
    /// </summary>
    public class CreateFunctionOptions : IOptions<FunctionResource>
    {
        /// <summary>
        /// The SID of the Service to create the Function resource under
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// A string to describe the Function resource
        /// </summary>
        public string FriendlyName { get; }

        /// <summary>
        /// Construct a new CreateFunctionOptions
        /// </summary>
        /// <param name="pathServiceSid"> The SID of the Service to create the Function resource under </param>
        /// <param name="friendlyName"> A string to describe the Function resource </param>
        public CreateFunctionOptions(string pathServiceSid, string friendlyName)
        {
            PathServiceSid = pathServiceSid;
            FriendlyName = friendlyName;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (FriendlyName != null)
            {
                p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
            }

            return p;
        }
    }

    /// <summary>
    /// PLEASE NOTE that this class contains beta products that are subject to change. Use them with caution.
    ///
    /// Update a specific Function resource.
    /// </summary>
    public class UpdateFunctionOptions : IOptions<FunctionResource>
    {
        /// <summary>
        /// The SID of the Service to update the Function resource from
        /// </summary>
        public string PathServiceSid { get; }
        /// <summary>
        /// The SID of the Function resource to update
        /// </summary>
        public string PathSid { get; }
        /// <summary>
        /// A string to describe the Function resource
        /// </summary>
        public string FriendlyName { get; }

        /// <summary>
        /// Construct a new UpdateFunctionOptions
        /// </summary>
        /// <param name="pathServiceSid"> The SID of the Service to update the Function resource from </param>
        /// <param name="pathSid"> The SID of the Function resource to update </param>
        /// <param name="friendlyName"> A string to describe the Function resource </param>
        public UpdateFunctionOptions(string pathServiceSid, string pathSid, string friendlyName)
        {
            PathServiceSid = pathServiceSid;
            PathSid = pathSid;
            FriendlyName = friendlyName;
        }

        /// <summary>
        /// Generate the necessary parameters
        /// </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();
            if (FriendlyName != null)
            {
                p.Add(new KeyValuePair<string, string>("FriendlyName", FriendlyName));
            }

            return p;
        }
    }

}