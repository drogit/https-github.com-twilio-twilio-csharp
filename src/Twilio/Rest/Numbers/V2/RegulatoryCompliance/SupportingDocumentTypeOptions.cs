/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;

namespace Twilio.Rest.Numbers.V2.RegulatoryCompliance
{

  /// <summary>
  /// Retrieve a list of all Supporting Document Types.
  /// </summary>
  public class ReadSupportingDocumentTypeOptions : ReadOptions<SupportingDocumentTypeResource>
  {
    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public override List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      if (PageSize != null)
      {
        p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
      }

      return p;
    }
  }

  /// <summary>
  /// Fetch a specific Supporting Document Type Instance.
  /// </summary>
  public class FetchSupportingDocumentTypeOptions : IOptions<SupportingDocumentTypeResource>
  {
    /// <summary>
    /// The unique string that identifies the Supporting Document Type resource
    /// </summary>
    public string PathSid { get; }

    /// <summary>
    /// Construct a new FetchSupportingDocumentTypeOptions
    /// </summary>
    /// <param name="pathSid"> The unique string that identifies the Supporting Document Type resource </param>
    public FetchSupportingDocumentTypeOptions(string pathSid)
    {
      PathSid = pathSid;
    }

    /// <summary>
    /// Generate the necessary parameters
    /// </summary>
    public List<KeyValuePair<string, string>> GetParams()
    {
      var p = new List<KeyValuePair<string, string>>();
      return p;
    }
  }

}