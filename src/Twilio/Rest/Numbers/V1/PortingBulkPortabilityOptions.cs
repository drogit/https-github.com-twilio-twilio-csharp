/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Twilio - Numbers
 * This is the public Twilio REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Converters;
using System.Linq;



namespace Twilio.Rest.Numbers.V1
{

    /// <summary> Allows to check if a list of phone numbers can be ported to Twilio or not. This is done asynchronous for each phone number. </summary>
    public class CreatePortingBulkPortabilityOptions : IOptions<PortingBulkPortabilityResource>
    {
        
        ///<summary> The phone numbers which portability is to be checked. This should be a list of strings. Phone numbers are in E.164 format (e.g. +16175551212). . </summary> 
        public List<string> PhoneNumbers { get; }


        /// <summary> Construct a new CreatePortingBulkPortabilityOptions </summary>
        /// <param name="phoneNumbers"> The phone numbers which portability is to be checked. This should be a list of strings. Phone numbers are in E.164 format (e.g. +16175551212). . </param>
        public CreatePortingBulkPortabilityOptions(List<string> phoneNumbers)
        {
            PhoneNumbers = phoneNumbers;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (PhoneNumbers != null)
            {
                p.AddRange(PhoneNumbers.Select(PhoneNumbers => new KeyValuePair<string, string>("PhoneNumbers", PhoneNumbers)));
            }
            return p;
        }

        

    }
    /// <summary> Fetch a previous portability check. This should return the current status of the validation and the result for all the numbers provided, given that they have been validated (as this process is performed asynchronously). </summary>
    public class FetchPortingBulkPortabilityOptions : IOptions<PortingBulkPortabilityResource>
    {
    
        ///<summary> A 34 character string that uniquely identifies the Portability check. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new FetchPortingBulkPortabilityOptions </summary>
        /// <param name="pathSid"> A 34 character string that uniquely identifies the Portability check. </param>
        public FetchPortingBulkPortabilityOptions(string pathSid)
        {
            PathSid = pathSid;
        }

        
        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }

        

    }


}

