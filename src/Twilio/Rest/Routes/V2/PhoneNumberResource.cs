/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PhoneNumberResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Routes.V2
{

    public class PhoneNumberResource : Resource
    {
        private static Request BuildCreateRequest(CreatePhoneNumberOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Routes,
                "/v2/PhoneNumbers/" + options.PathPhoneNumber + "",
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// Assign an Inbound Processing Region to a phone number
        /// </summary>
        /// <param name="options"> Create PhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneNumber </returns>
        public static PhoneNumberResource Create(CreatePhoneNumberOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Assign an Inbound Processing Region to a phone number
        /// </summary>
        /// <param name="options"> Create PhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PhoneNumberResource> CreateAsync(CreatePhoneNumberOptions options,
                                                                                         ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Assign an Inbound Processing Region to a phone number
        /// </summary>
        /// <param name="pathPhoneNumber"> The phone number </param>
        /// <param name="voiceRegion"> The Inbound Processing Region used for this phone number for voice </param>
        /// <param name="friendlyName"> A human readable description of this resource. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneNumber </returns>
        public static PhoneNumberResource Create(string pathPhoneNumber,
                                                 string voiceRegion = null,
                                                 string friendlyName = null,
                                                 ITwilioRestClient client = null)
        {
            var options = new CreatePhoneNumberOptions(pathPhoneNumber){VoiceRegion = voiceRegion, FriendlyName = friendlyName};
            return Create(options, client);
        }

        #if !NET35
        /// <summary>
        /// Assign an Inbound Processing Region to a phone number
        /// </summary>
        /// <param name="pathPhoneNumber"> The phone number </param>
        /// <param name="voiceRegion"> The Inbound Processing Region used for this phone number for voice </param>
        /// <param name="friendlyName"> A human readable description of this resource. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PhoneNumberResource> CreateAsync(string pathPhoneNumber,
                                                                                         string voiceRegion = null,
                                                                                         string friendlyName = null,
                                                                                         ITwilioRestClient client = null)
        {
            var options = new CreatePhoneNumberOptions(pathPhoneNumber){VoiceRegion = voiceRegion, FriendlyName = friendlyName};
            return await CreateAsync(options, client);
        }
        #endif

        private static Request BuildUpdateRequest(UpdatePhoneNumberOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Routes,
                "/v2/PhoneNumbers/" + options.PathPhoneNumber + "",
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// Assign an Inbound Processing Region to a phone number.
        /// </summary>
        /// <param name="options"> Update PhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneNumber </returns>
        public static PhoneNumberResource Update(UpdatePhoneNumberOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Assign an Inbound Processing Region to a phone number.
        /// </summary>
        /// <param name="options"> Update PhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PhoneNumberResource> UpdateAsync(UpdatePhoneNumberOptions options,
                                                                                         ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Assign an Inbound Processing Region to a phone number.
        /// </summary>
        /// <param name="pathPhoneNumber"> The phone number </param>
        /// <param name="voiceRegion"> The Inbound Processing Region used for this phone number for voice </param>
        /// <param name="friendlyName"> A human readable description of this resource. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneNumber </returns>
        public static PhoneNumberResource Update(string pathPhoneNumber,
                                                 string voiceRegion,
                                                 string friendlyName,
                                                 ITwilioRestClient client = null)
        {
            var options = new UpdatePhoneNumberOptions(pathPhoneNumber, voiceRegion, friendlyName);
            return Update(options, client);
        }

        #if !NET35
        /// <summary>
        /// Assign an Inbound Processing Region to a phone number.
        /// </summary>
        /// <param name="pathPhoneNumber"> The phone number </param>
        /// <param name="voiceRegion"> The Inbound Processing Region used for this phone number for voice </param>
        /// <param name="friendlyName"> A human readable description of this resource. </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PhoneNumberResource> UpdateAsync(string pathPhoneNumber,
                                                                                         string voiceRegion,
                                                                                         string friendlyName,
                                                                                         ITwilioRestClient client = null)
        {
            var options = new UpdatePhoneNumberOptions(pathPhoneNumber, voiceRegion, friendlyName);
            return await UpdateAsync(options, client);
        }
        #endif

        private static Request BuildFetchRequest(FetchPhoneNumberOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Routes,
                "/v2/PhoneNumbers/" + options.PathPhoneNumber + "",
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// Fetch the Inbound Processing Region assigned to a phone number.
        /// </summary>
        /// <param name="options"> Fetch PhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneNumber </returns>
        public static PhoneNumberResource Fetch(FetchPhoneNumberOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// Fetch the Inbound Processing Region assigned to a phone number.
        /// </summary>
        /// <param name="options"> Fetch PhoneNumber parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PhoneNumberResource> FetchAsync(FetchPhoneNumberOptions options,
                                                                                        ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// Fetch the Inbound Processing Region assigned to a phone number.
        /// </summary>
        /// <param name="pathPhoneNumber"> The phone number </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of PhoneNumber </returns>
        public static PhoneNumberResource Fetch(string pathPhoneNumber, ITwilioRestClient client = null)
        {
            var options = new FetchPhoneNumberOptions(pathPhoneNumber);
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary>
        /// Fetch the Inbound Processing Region assigned to a phone number.
        /// </summary>
        /// <param name="pathPhoneNumber"> The phone number </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of PhoneNumber </returns>
        public static async System.Threading.Tasks.Task<PhoneNumberResource> FetchAsync(string pathPhoneNumber,
                                                                                        ITwilioRestClient client = null)
        {
            var options = new FetchPhoneNumberOptions(pathPhoneNumber);
            return await FetchAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a PhoneNumberResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> PhoneNumberResource object represented by the provided JSON </returns>
        public static PhoneNumberResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<PhoneNumberResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The phone number
        /// </summary>
        [JsonProperty("phone_number")]
        public string PhoneNumber { get; private set; }
        /// <summary>
        /// The absolute URL of the resource
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }
        /// <summary>
        /// A string that uniquely identifies the Inbound Processing Region assignments for this phone number.
        /// </summary>
        [JsonProperty("sid")]
        public string Sid { get; private set; }
        /// <summary>
        /// Account Sid.
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// A human readable description of the Inbound Processing Region assignments for this phone number.
        /// </summary>
        [JsonProperty("friendly_name")]
        public string FriendlyName { get; private set; }
        /// <summary>
        /// The Inbound Processing Region used for this phone number for voice.
        /// </summary>
        [JsonProperty("voice_region")]
        public string VoiceRegion { get; private set; }
        /// <summary>
        /// The date that this phone number was assigned an Inbound Processing Region.
        /// </summary>
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }
        /// <summary>
        /// The date that the Inbound Processing Region was updated for this phone number.
        /// </summary>
        [JsonProperty("date_updated")]
        public DateTime? DateUpdated { get; private set; }

        private PhoneNumberResource()
        {

        }
    }

}