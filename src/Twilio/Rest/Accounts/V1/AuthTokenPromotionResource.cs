/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// AuthTokenPromotionResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Accounts.V1
{

  public class AuthTokenPromotionResource : Resource
  {
    private static Request BuildUpdateRequest(UpdateAuthTokenPromotionOptions options, ITwilioRestClient client)
    {
      return new Request(
          HttpMethod.Post,
          Rest.Domain.Accounts,
          "/v1/AuthTokens/Promote",
          postParams: options.GetParams(),
          headerParams: null
      );
    }

    /// <summary>
    /// Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old
    /// primary Auth Token will result in an error.
    /// </summary>
    /// <param name="options"> Update AuthTokenPromotion parameters </param>
    /// <param name="client"> Client to make requests to Twilio </param>
    /// <returns> A single instance of AuthTokenPromotion </returns>
    public static AuthTokenPromotionResource Update(UpdateAuthTokenPromotionOptions options,
                                                    ITwilioRestClient client = null)
    {
      client = client ?? TwilioClient.GetRestClient();
      var response = client.Request(BuildUpdateRequest(options, client));
      return FromJson(response.Content);
    }

#if !NET35
    /// <summary>
    /// Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old
    /// primary Auth Token will result in an error.
    /// </summary>
    /// <param name="options"> Update AuthTokenPromotion parameters </param>
    /// <param name="client"> Client to make requests to Twilio </param>
    /// <returns> Task that resolves to A single instance of AuthTokenPromotion </returns>
    public static async System.Threading.Tasks.Task<AuthTokenPromotionResource> UpdateAsync(UpdateAuthTokenPromotionOptions options,
                                                                                            ITwilioRestClient client = null)
    {
      client = client ?? TwilioClient.GetRestClient();
      var response = await client.RequestAsync(BuildUpdateRequest(options, client));
      return FromJson(response.Content);
    }
#endif

    /// <summary>
    /// Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old
    /// primary Auth Token will result in an error.
    /// </summary>
    /// <param name="client"> Client to make requests to Twilio </param>
    /// <returns> A single instance of AuthTokenPromotion </returns>
    public static AuthTokenPromotionResource Update(ITwilioRestClient client = null)
    {
      var options = new UpdateAuthTokenPromotionOptions();
      return Update(options, client);
    }

#if !NET35
    /// <summary>
    /// Promote the secondary Auth Token to primary. After promoting the new token, all requests to Twilio using your old
    /// primary Auth Token will result in an error.
    /// </summary>
    /// <param name="client"> Client to make requests to Twilio </param>
    /// <returns> Task that resolves to A single instance of AuthTokenPromotion </returns>
    public static async System.Threading.Tasks.Task<AuthTokenPromotionResource> UpdateAsync(ITwilioRestClient client = null)
    {
      var options = new UpdateAuthTokenPromotionOptions();
      return await UpdateAsync(options, client);
    }
#endif

    /// <summary>
    /// Converts a JSON string into a AuthTokenPromotionResource object
    /// </summary>
    /// <param name="json"> Raw JSON string </param>
    /// <returns> AuthTokenPromotionResource object represented by the provided JSON </returns>
    public static AuthTokenPromotionResource FromJson(string json)
    {
      // Convert all checked exceptions to Runtime
      try
      {
        return JsonConvert.DeserializeObject<AuthTokenPromotionResource>(json);
      }
      catch (JsonException e)
      {
        throw new ApiException(e.Message, e);
      }
    }

    /// <summary>
    /// The SID of the Account that the secondary Auth Token was created for
    /// </summary>
    [JsonProperty("account_sid")]
    public string AccountSid { get; private set; }
    /// <summary>
    /// The promoted Auth Token
    /// </summary>
    [JsonProperty("auth_token")]
    public string AuthToken { get; private set; }
    /// <summary>
    /// The ISO 8601 formatted date and time in UTC when the resource was created
    /// </summary>
    [JsonProperty("date_created")]
    public DateTime? DateCreated { get; private set; }
    /// <summary>
    /// The ISO 8601 formatted date and time in UTC when the resource was last updated
    /// </summary>
    [JsonProperty("date_updated")]
    public DateTime? DateUpdated { get; private set; }
    /// <summary>
    /// The URI for this resource, relative to `https://accounts.twilio.com`
    /// </summary>
    [JsonProperty("url")]
    public Uri Url { get; private set; }

    private AuthTokenPromotionResource()
    {

    }
  }

}