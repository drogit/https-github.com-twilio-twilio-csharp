/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// DependentHostedNumberOrderResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Types;

namespace Twilio.Rest.Preview.HostedNumbers.AuthorizationDocument
{

    public class DependentHostedNumberOrderResource : Resource
    {
        public sealed class StatusEnum : StringEnum
        {
            private StatusEnum(string value) : base(value) {}
            public StatusEnum() {}
            public static implicit operator StatusEnum(string value)
            {
                return new StatusEnum(value);
            }

            public static readonly StatusEnum Received = new StatusEnum("received");
            public static readonly StatusEnum PendingVerification = new StatusEnum("pending-verification");
            public static readonly StatusEnum Verified = new StatusEnum("verified");
            public static readonly StatusEnum PendingLoa = new StatusEnum("pending-loa");
            public static readonly StatusEnum CarrierProcessing = new StatusEnum("carrier-processing");
            public static readonly StatusEnum Testing = new StatusEnum("testing");
            public static readonly StatusEnum Completed = new StatusEnum("completed");
            public static readonly StatusEnum Failed = new StatusEnum("failed");
            public static readonly StatusEnum ActionRequired = new StatusEnum("action-required");
        }

        public sealed class VerificationTypeEnum : StringEnum
        {
            private VerificationTypeEnum(string value) : base(value) {}
            public VerificationTypeEnum() {}
            public static implicit operator VerificationTypeEnum(string value)
            {
                return new VerificationTypeEnum(value);
            }

            public static readonly VerificationTypeEnum PhoneCall = new VerificationTypeEnum("phone-call");
            public static readonly VerificationTypeEnum PhoneBill = new VerificationTypeEnum("phone-bill");
        }

        private static Request BuildReadRequest(ReadDependentHostedNumberOrderOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Preview,
                "/HostedNumbers/AuthorizationDocuments/" + options.PathSigningDocumentSid + "/DependentHostedNumberOrders",
                queryParams: options.GetParams()
            );
        }

        /// <summary>
        /// Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.
        /// </summary>
        /// <param name="options"> Read DependentHostedNumberOrder parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of DependentHostedNumberOrder </returns>
        public static ResourceSet<DependentHostedNumberOrderResource> Read(ReadDependentHostedNumberOrderOptions options,
                                                                           ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildReadRequest(options, client));

            var page = Page<DependentHostedNumberOrderResource>.FromJson("items", response.Content);
            return new ResourceSet<DependentHostedNumberOrderResource>(page, options, client);
        }

        #if !NET35
        /// <summary>
        /// Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.
        /// </summary>
        /// <param name="options"> Read DependentHostedNumberOrder parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of DependentHostedNumberOrder </returns>
        public static async System.Threading.Tasks.Task<ResourceSet<DependentHostedNumberOrderResource>> ReadAsync(ReadDependentHostedNumberOrderOptions options,
                                                                                                                   ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildReadRequest(options, client));

            var page = Page<DependentHostedNumberOrderResource>.FromJson("items", response.Content);
            return new ResourceSet<DependentHostedNumberOrderResource>(page, options, client);
        }
        #endif

        /// <summary>
        /// Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.
        /// </summary>
        /// <param name="pathSigningDocumentSid"> The signing_document_sid </param>
        /// <param name="status"> The Status of this HostedNumberOrder. </param>
        /// <param name="phoneNumber"> An E164 formatted phone number. </param>
        /// <param name="incomingPhoneNumberSid"> IncomingPhoneNumber sid. </param>
        /// <param name="friendlyName"> A human readable description of this resource. </param>
        /// <param name="uniqueName"> A unique, developer assigned name of this HostedNumberOrder. </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of DependentHostedNumberOrder </returns>
        public static ResourceSet<DependentHostedNumberOrderResource> Read(string pathSigningDocumentSid,
                                                                           DependentHostedNumberOrderResource.StatusEnum status = null,
                                                                           Types.PhoneNumber phoneNumber = null,
                                                                           string incomingPhoneNumberSid = null,
                                                                           string friendlyName = null,
                                                                           string uniqueName = null,
                                                                           int? pageSize = null,
                                                                           long? limit = null,
                                                                           ITwilioRestClient client = null)
        {
            var options = new ReadDependentHostedNumberOrderOptions(pathSigningDocumentSid){Status = status, PhoneNumber = phoneNumber, IncomingPhoneNumberSid = incomingPhoneNumberSid, FriendlyName = friendlyName, UniqueName = uniqueName, PageSize = pageSize, Limit = limit};
            return Read(options, client);
        }

        #if !NET35
        /// <summary>
        /// Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDocument.
        /// </summary>
        /// <param name="pathSigningDocumentSid"> The signing_document_sid </param>
        /// <param name="status"> The Status of this HostedNumberOrder. </param>
        /// <param name="phoneNumber"> An E164 formatted phone number. </param>
        /// <param name="incomingPhoneNumberSid"> IncomingPhoneNumber sid. </param>
        /// <param name="friendlyName"> A human readable description of this resource. </param>
        /// <param name="uniqueName"> A unique, developer assigned name of this HostedNumberOrder. </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of DependentHostedNumberOrder </returns>
        public static async System.Threading.Tasks.Task<ResourceSet<DependentHostedNumberOrderResource>> ReadAsync(string pathSigningDocumentSid,
                                                                                                                   DependentHostedNumberOrderResource.StatusEnum status = null,
                                                                                                                   Types.PhoneNumber phoneNumber = null,
                                                                                                                   string incomingPhoneNumberSid = null,
                                                                                                                   string friendlyName = null,
                                                                                                                   string uniqueName = null,
                                                                                                                   int? pageSize = null,
                                                                                                                   long? limit = null,
                                                                                                                   ITwilioRestClient client = null)
        {
            var options = new ReadDependentHostedNumberOrderOptions(pathSigningDocumentSid){Status = status, PhoneNumber = phoneNumber, IncomingPhoneNumberSid = incomingPhoneNumberSid, FriendlyName = friendlyName, UniqueName = uniqueName, PageSize = pageSize, Limit = limit};
            return await ReadAsync(options, client);
        }
        #endif

        /// <summary>
        /// Fetch the target page of records
        /// </summary>
        /// <param name="targetUrl"> API-generated URL for the requested results page </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The target page of records </returns>
        public static Page<DependentHostedNumberOrderResource> GetPage(string targetUrl, ITwilioRestClient client)
        {
            client = client ?? TwilioClient.GetRestClient();

            var request = new Request(
                HttpMethod.Get,
                targetUrl
            );

            var response = client.Request(request);
            return Page<DependentHostedNumberOrderResource>.FromJson("items", response.Content);
        }

        /// <summary>
        /// Fetch the next page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The next page of records </returns>
        public static Page<DependentHostedNumberOrderResource> NextPage(Page<DependentHostedNumberOrderResource> page,
                                                                        ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetNextPageUrl(Rest.Domain.Preview)
            );

            var response = client.Request(request);
            return Page<DependentHostedNumberOrderResource>.FromJson("items", response.Content);
        }

        /// <summary>
        /// Fetch the previous page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The previous page of records </returns>
        public static Page<DependentHostedNumberOrderResource> PreviousPage(Page<DependentHostedNumberOrderResource> page,
                                                                            ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetPreviousPageUrl(Rest.Domain.Preview)
            );

            var response = client.Request(request);
            return Page<DependentHostedNumberOrderResource>.FromJson("items", response.Content);
        }

        /// <summary>
        /// Converts a JSON string into a DependentHostedNumberOrderResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> DependentHostedNumberOrderResource object represented by the provided JSON </returns>
        public static DependentHostedNumberOrderResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<DependentHostedNumberOrderResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// HostedNumberOrder sid.
        /// </summary>
        [JsonProperty("sid")]
        public string Sid { get; private set; }
        /// <summary>
        /// Account sid.
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// IncomingPhoneNumber sid.
        /// </summary>
        [JsonProperty("incoming_phone_number_sid")]
        public string IncomingPhoneNumberSid { get; private set; }
        /// <summary>
        /// Address sid.
        /// </summary>
        [JsonProperty("address_sid")]
        public string AddressSid { get; private set; }
        /// <summary>
        /// LOA document sid.
        /// </summary>
        [JsonProperty("signing_document_sid")]
        public string SigningDocumentSid { get; private set; }
        /// <summary>
        /// An E164 formatted phone number.
        /// </summary>
        [JsonProperty("phone_number")]
        [JsonConverter(typeof(PhoneNumberConverter))]
        public Types.PhoneNumber PhoneNumber { get; private set; }
        /// <summary>
        /// A mapping of phone number capabilities.
        /// </summary>
        [JsonProperty("capabilities")]
        public PhoneNumberCapabilities Capabilities { get; private set; }
        /// <summary>
        /// A human readable description of this resource.
        /// </summary>
        [JsonProperty("friendly_name")]
        public string FriendlyName { get; private set; }
        /// <summary>
        /// A unique, developer assigned name of this HostedNumberOrder.
        /// </summary>
        [JsonProperty("unique_name")]
        public string UniqueName { get; private set; }
        /// <summary>
        /// The Status of this HostedNumberOrder.
        /// </summary>
        [JsonProperty("status")]
        [JsonConverter(typeof(StringEnumConverter))]
        public DependentHostedNumberOrderResource.StatusEnum Status { get; private set; }
        /// <summary>
        /// Why a hosted_number_order reached status "action-required"
        /// </summary>
        [JsonProperty("failure_reason")]
        public string FailureReason { get; private set; }
        /// <summary>
        /// The date this HostedNumberOrder was created.
        /// </summary>
        [JsonProperty("date_created")]
        public DateTime? DateCreated { get; private set; }
        /// <summary>
        /// The date this HostedNumberOrder was updated.
        /// </summary>
        [JsonProperty("date_updated")]
        public DateTime? DateUpdated { get; private set; }
        /// <summary>
        /// The number of attempts made to verify ownership of the phone number.
        /// </summary>
        [JsonProperty("verification_attempts")]
        public int? VerificationAttempts { get; private set; }
        /// <summary>
        /// Email.
        /// </summary>
        [JsonProperty("email")]
        public string Email { get; private set; }
        /// <summary>
        /// A list of emails.
        /// </summary>
        [JsonProperty("cc_emails")]
        public List<string> CcEmails { get; private set; }
        /// <summary>
        /// The method used for verifying ownership of the number to be hosted.
        /// </summary>
        [JsonProperty("verification_type")]
        [JsonConverter(typeof(StringEnumConverter))]
        public DependentHostedNumberOrderResource.VerificationTypeEnum VerificationType { get; private set; }
        /// <summary>
        /// Verification Document Sid.
        /// </summary>
        [JsonProperty("verification_document_sid")]
        public string VerificationDocumentSid { get; private set; }
        /// <summary>
        /// Phone extension to use for ownership verification call.
        /// </summary>
        [JsonProperty("extension")]
        public string Extension { get; private set; }
        /// <summary>
        /// Seconds (0-30) to delay ownership verification call by.
        /// </summary>
        [JsonProperty("call_delay")]
        public int? CallDelay { get; private set; }
        /// <summary>
        /// The digits passed during the ownership verification call.
        /// </summary>
        [JsonProperty("verification_code")]
        public string VerificationCode { get; private set; }
        /// <summary>
        /// List of IDs for ownership verification calls.
        /// </summary>
        [JsonProperty("verification_call_sids")]
        public List<string> VerificationCallSids { get; private set; }

        private DependentHostedNumberOrderResource()
        {

        }
    }

}