/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// AssistantFallbackActionsResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Preview.Understand.Assistant
{

    public class AssistantFallbackActionsResource : Resource
    {
        private static Request BuildFetchRequest(FetchAssistantFallbackActionsOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Preview,
                "/understand/Assistants/" + options.PathAssistantSid + "/FallbackActions",
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="options"> Fetch AssistantFallbackActions parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of AssistantFallbackActions </returns>
        public static AssistantFallbackActionsResource Fetch(FetchAssistantFallbackActionsOptions options,
                                                             ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="options"> Fetch AssistantFallbackActions parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of AssistantFallbackActions </returns>
        public static async System.Threading.Tasks.Task<AssistantFallbackActionsResource> FetchAsync(FetchAssistantFallbackActionsOptions options,
                                                                                                     ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of AssistantFallbackActions </returns>
        public static AssistantFallbackActionsResource Fetch(string pathAssistantSid, ITwilioRestClient client = null)
        {
            var options = new FetchAssistantFallbackActionsOptions(pathAssistantSid);
            return Fetch(options, client);
        }

        #if !NET35
        /// <summary>
        /// fetch
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of AssistantFallbackActions </returns>
        public static async System.Threading.Tasks.Task<AssistantFallbackActionsResource> FetchAsync(string pathAssistantSid,
                                                                                                     ITwilioRestClient client = null)
        {
            var options = new FetchAssistantFallbackActionsOptions(pathAssistantSid);
            return await FetchAsync(options, client);
        }
        #endif

        private static Request BuildUpdateRequest(UpdateAssistantFallbackActionsOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Preview,
                "/understand/Assistants/" + options.PathAssistantSid + "/FallbackActions",
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// update
        /// </summary>
        /// <param name="options"> Update AssistantFallbackActions parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of AssistantFallbackActions </returns>
        public static AssistantFallbackActionsResource Update(UpdateAssistantFallbackActionsOptions options,
                                                              ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// update
        /// </summary>
        /// <param name="options"> Update AssistantFallbackActions parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of AssistantFallbackActions </returns>
        public static async System.Threading.Tasks.Task<AssistantFallbackActionsResource> UpdateAsync(UpdateAssistantFallbackActionsOptions options,
                                                                                                      ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildUpdateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// update
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="fallbackActions"> The fallback_actions </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of AssistantFallbackActions </returns>
        public static AssistantFallbackActionsResource Update(string pathAssistantSid,
                                                              object fallbackActions = null,
                                                              ITwilioRestClient client = null)
        {
            var options = new UpdateAssistantFallbackActionsOptions(pathAssistantSid){FallbackActions = fallbackActions};
            return Update(options, client);
        }

        #if !NET35
        /// <summary>
        /// update
        /// </summary>
        /// <param name="pathAssistantSid"> The assistant_sid </param>
        /// <param name="fallbackActions"> The fallback_actions </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of AssistantFallbackActions </returns>
        public static async System.Threading.Tasks.Task<AssistantFallbackActionsResource> UpdateAsync(string pathAssistantSid,
                                                                                                      object fallbackActions = null,
                                                                                                      ITwilioRestClient client = null)
        {
            var options = new UpdateAssistantFallbackActionsOptions(pathAssistantSid){FallbackActions = fallbackActions};
            return await UpdateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a AssistantFallbackActionsResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> AssistantFallbackActionsResource object represented by the provided JSON </returns>
        public static AssistantFallbackActionsResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<AssistantFallbackActionsResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The account_sid
        /// </summary>
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }
        /// <summary>
        /// The assistant_sid
        /// </summary>
        [JsonProperty("assistant_sid")]
        public string AssistantSid { get; private set; }
        /// <summary>
        /// The url
        /// </summary>
        [JsonProperty("url")]
        public Uri Url { get; private set; }
        /// <summary>
        /// The data
        /// </summary>
        [JsonProperty("data")]
        public object Data { get; private set; }

        private AssistantFallbackActionsResource()
        {

        }
    }

}