/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /
/// <summary>
/// PLEASE NOTE that this class contains preview products that are subject to change. Use them with caution. If you
/// currently do not have developer preview access, please contact help@twilio.com.
///
/// ExportCustomJobResource
/// </summary>

using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Twilio.Base;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;

namespace Twilio.Rest.Preview.BulkExports.Export
{

    public class ExportCustomJobResource : Resource
    {
        private static Request BuildReadRequest(ReadExportCustomJobOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Get,
                Rest.Domain.Preview,
                "/BulkExports/Exports/" + options.PathResourceType + "/Jobs",
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// read
        /// </summary>
        /// <param name="options"> Read ExportCustomJob parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ExportCustomJob </returns>
        public static ResourceSet<ExportCustomJobResource> Read(ReadExportCustomJobOptions options,
                                                                ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildReadRequest(options, client));

            var page = Page<ExportCustomJobResource>.FromJson("jobs", response.Content);
            return new ResourceSet<ExportCustomJobResource>(page, options, client);
        }

        #if !NET35
        /// <summary>
        /// read
        /// </summary>
        /// <param name="options"> Read ExportCustomJob parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ExportCustomJob </returns>
        public static async System.Threading.Tasks.Task<ResourceSet<ExportCustomJobResource>> ReadAsync(ReadExportCustomJobOptions options,
                                                                                                        ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildReadRequest(options, client));

            var page = Page<ExportCustomJobResource>.FromJson("jobs", response.Content);
            return new ResourceSet<ExportCustomJobResource>(page, options, client);
        }
        #endif

        /// <summary>
        /// read
        /// </summary>
        /// <param name="pathResourceType"> The type of communication – Messages, Calls </param>
        /// <param name="nextToken"> The token for the next page of job results </param>
        /// <param name="previousToken"> The token for the previous page of result </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ExportCustomJob </returns>
        public static ResourceSet<ExportCustomJobResource> Read(string pathResourceType,
                                                                string nextToken = null,
                                                                string previousToken = null,
                                                                int? pageSize = null,
                                                                long? limit = null,
                                                                ITwilioRestClient client = null)
        {
            var options = new ReadExportCustomJobOptions(pathResourceType){NextToken = nextToken, PreviousToken = previousToken, PageSize = pageSize, Limit = limit};
            return Read(options, client);
        }

        #if !NET35
        /// <summary>
        /// read
        /// </summary>
        /// <param name="pathResourceType"> The type of communication – Messages, Calls </param>
        /// <param name="nextToken"> The token for the next page of job results </param>
        /// <param name="previousToken"> The token for the previous page of result </param>
        /// <param name="pageSize"> Page size </param>
        /// <param name="limit"> Record limit </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ExportCustomJob </returns>
        public static async System.Threading.Tasks.Task<ResourceSet<ExportCustomJobResource>> ReadAsync(string pathResourceType,
                                                                                                        string nextToken = null,
                                                                                                        string previousToken = null,
                                                                                                        int? pageSize = null,
                                                                                                        long? limit = null,
                                                                                                        ITwilioRestClient client = null)
        {
            var options = new ReadExportCustomJobOptions(pathResourceType){NextToken = nextToken, PreviousToken = previousToken, PageSize = pageSize, Limit = limit};
            return await ReadAsync(options, client);
        }
        #endif

        /// <summary>
        /// Fetch the target page of records
        /// </summary>
        /// <param name="targetUrl"> API-generated URL for the requested results page </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The target page of records </returns>
        public static Page<ExportCustomJobResource> GetPage(string targetUrl, ITwilioRestClient client)
        {
            client = client ?? TwilioClient.GetRestClient();

            var request = new Request(
                HttpMethod.Get,
                targetUrl
            );

            var response = client.Request(request);
            return Page<ExportCustomJobResource>.FromJson("jobs", response.Content);
        }

        /// <summary>
        /// Fetch the next page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The next page of records </returns>
        public static Page<ExportCustomJobResource> NextPage(Page<ExportCustomJobResource> page, ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetNextPageUrl(Rest.Domain.Preview)
            );

            var response = client.Request(request);
            return Page<ExportCustomJobResource>.FromJson("jobs", response.Content);
        }

        /// <summary>
        /// Fetch the previous page of records
        /// </summary>
        /// <param name="page"> current page of records </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> The previous page of records </returns>
        public static Page<ExportCustomJobResource> PreviousPage(Page<ExportCustomJobResource> page,
                                                                 ITwilioRestClient client)
        {
            var request = new Request(
                HttpMethod.Get,
                page.GetPreviousPageUrl(Rest.Domain.Preview)
            );

            var response = client.Request(request);
            return Page<ExportCustomJobResource>.FromJson("jobs", response.Content);
        }

        private static Request BuildCreateRequest(CreateExportCustomJobOptions options, ITwilioRestClient client)
        {
            return new Request(
                HttpMethod.Post,
                Rest.Domain.Preview,
                "/BulkExports/Exports/" + options.PathResourceType + "/Jobs",
                postParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary>
        /// create
        /// </summary>
        /// <param name="options"> Create ExportCustomJob parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ExportCustomJob </returns>
        public static ExportCustomJobResource Create(CreateExportCustomJobOptions options, ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = client.Request(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }

        #if !NET35
        /// <summary>
        /// create
        /// </summary>
        /// <param name="options"> Create ExportCustomJob parameters </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ExportCustomJob </returns>
        public static async System.Threading.Tasks.Task<ExportCustomJobResource> CreateAsync(CreateExportCustomJobOptions options,
                                                                                             ITwilioRestClient client = null)
        {
            client = client ?? TwilioClient.GetRestClient();
            var response = await client.RequestAsync(BuildCreateRequest(options, client));
            return FromJson(response.Content);
        }
        #endif

        /// <summary>
        /// create
        /// </summary>
        /// <param name="pathResourceType"> The type of communication – Messages, Calls </param>
        /// <param name="friendlyName"> The friendly_name </param>
        /// <param name="startDay"> The start_day </param>
        /// <param name="endDay"> The end_day </param>
        /// <param name="webhookUrl"> The webhook_url </param>
        /// <param name="webhookMethod"> The webhook_method </param>
        /// <param name="email"> The email </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> A single instance of ExportCustomJob </returns>
        public static ExportCustomJobResource Create(string pathResourceType,
                                                     string friendlyName = null,
                                                     string startDay = null,
                                                     string endDay = null,
                                                     string webhookUrl = null,
                                                     string webhookMethod = null,
                                                     string email = null,
                                                     ITwilioRestClient client = null)
        {
            var options = new CreateExportCustomJobOptions(pathResourceType){FriendlyName = friendlyName, StartDay = startDay, EndDay = endDay, WebhookUrl = webhookUrl, WebhookMethod = webhookMethod, Email = email};
            return Create(options, client);
        }

        #if !NET35
        /// <summary>
        /// create
        /// </summary>
        /// <param name="pathResourceType"> The type of communication – Messages, Calls </param>
        /// <param name="friendlyName"> The friendly_name </param>
        /// <param name="startDay"> The start_day </param>
        /// <param name="endDay"> The end_day </param>
        /// <param name="webhookUrl"> The webhook_url </param>
        /// <param name="webhookMethod"> The webhook_method </param>
        /// <param name="email"> The email </param>
        /// <param name="client"> Client to make requests to Twilio </param>
        /// <returns> Task that resolves to A single instance of ExportCustomJob </returns>
        public static async System.Threading.Tasks.Task<ExportCustomJobResource> CreateAsync(string pathResourceType,
                                                                                             string friendlyName = null,
                                                                                             string startDay = null,
                                                                                             string endDay = null,
                                                                                             string webhookUrl = null,
                                                                                             string webhookMethod = null,
                                                                                             string email = null,
                                                                                             ITwilioRestClient client = null)
        {
            var options = new CreateExportCustomJobOptions(pathResourceType){FriendlyName = friendlyName, StartDay = startDay, EndDay = endDay, WebhookUrl = webhookUrl, WebhookMethod = webhookMethod, Email = email};
            return await CreateAsync(options, client);
        }
        #endif

        /// <summary>
        /// Converts a JSON string into a ExportCustomJobResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> ExportCustomJobResource object represented by the provided JSON </returns>
        public static ExportCustomJobResource FromJson(string json)
        {
            // Convert all checked exceptions to Runtime
            try
            {
                return JsonConvert.DeserializeObject<ExportCustomJobResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }

        /// <summary>
        /// The friendly name specified when creating the job
        /// </summary>
        [JsonProperty("friendly_name")]
        public string FriendlyName { get; private set; }
        /// <summary>
        /// The type of communication – Messages, Calls
        /// </summary>
        [JsonProperty("resource_type")]
        public string ResourceType { get; private set; }
        /// <summary>
        /// The start time for the export specified when creating the job
        /// </summary>
        [JsonProperty("start_day")]
        public string StartDay { get; private set; }
        /// <summary>
        /// The end time for the export specified when creating the job
        /// </summary>
        [JsonProperty("end_day")]
        public string EndDay { get; private set; }
        /// <summary>
        /// The optional webhook url called on completion
        /// </summary>
        [JsonProperty("webhook_url")]
        public string WebhookUrl { get; private set; }
        /// <summary>
        /// This is the method used to call the webhook
        /// </summary>
        [JsonProperty("webhook_method")]
        public string WebhookMethod { get; private set; }
        /// <summary>
        /// The optional email to send the completion notification to
        /// </summary>
        [JsonProperty("email")]
        public string Email { get; private set; }
        /// <summary>
        /// The job_sid returned when the export was created
        /// </summary>
        [JsonProperty("job_sid")]
        public string JobSid { get; private set; }
        /// <summary>
        /// The details
        /// </summary>
        [JsonProperty("details")]
        public object Details { get; private set; }

        private ExportCustomJobResource()
        {

        }
    }

}