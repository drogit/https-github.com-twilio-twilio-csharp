/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using NSubstitute;
using NSubstitute.ExceptionExtensions;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Rest.Insights.V1;

namespace Twilio.Tests.Rest.Insights.V1
{

    [TestFixture]
    public class RoomTest : TwilioTest
    {
        [Test]
        public void TestFetchRequest()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            var request = new Request(
                HttpMethod.Get,
                Twilio.Rest.Domain.Insights,
                "/v1/Video/Rooms/RMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                ""
            );
            twilioRestClient.Request(request).Throws(new ApiException("Server Error, no content"));

            try
            {
                RoomResource.Fetch("RMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", client: twilioRestClient);
                Assert.Fail("Expected TwilioException to be thrown for 500");
            }
            catch (ApiException) {}
            twilioRestClient.Received().Request(request);
        }

        [Test]
        public void TestFetchResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"room_type\": \"go\",\"unique_participant_identities\": 0,\"codecs\": [\"VP8\"],\"max_participants\": 0,\"room_sid\": \"RMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"create_time\": \"2015-07-30T20:00:00Z\",\"end_reason\": \"room_ended_via_api\",\"duration_sec\": 50000000,\"room_status\": \"in_progress\",\"media_region\": \"us1\",\"recording_enabled\": false,\"edge_location\": \"Ashburn\",\"max_concurrent_participants\": 0,\"unique_participants\": 0,\"room_name\": \"room_name\",\"created_method\": \"sdk\",\"total_participant_duration_sec\": 50000000,\"status_callback_method\": \"GET\",\"account_sid\": \"ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"end_time\": \"2015-07-30T20:00:00Z\",\"total_recording_duration_sec\": 50000000,\"processing_state\": \"complete\",\"concurrent_participants\": 0,\"status_callback\": \"http://www.example.com\",\"url\": \"https://insights.twilio.com/v1/Video/Rooms/RMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"links\": {\"participants\": \"https://insights.twilio.com/v1/Video/Rooms/RMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Participants\"}}"
                                     ));

            var response = RoomResource.Fetch("RMXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", client: twilioRestClient);
            Assert.NotNull(response);
        }

        [Test]
        public void TestReadRequest()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            var request = new Request(
                HttpMethod.Get,
                Twilio.Rest.Domain.Insights,
                "/v1/Video/Rooms",
                ""
            );
            twilioRestClient.Request(request).Throws(new ApiException("Server Error, no content"));

            try
            {
                RoomResource.Read(client: twilioRestClient);
                Assert.Fail("Expected TwilioException to be thrown for 500");
            }
            catch (ApiException) {}
            twilioRestClient.Received().Request(request);
        }

        [Test]
        public void TestReadEmptyResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"meta\": {\"first_page_url\": \"https://insights.twilio.com/v1/Video/Rooms?PageSize=50&Page=0\",\"url\": \"https://insights.twilio.com/v1/Video/Rooms?PageSize=50&Page=0\",\"page_size\": 50,\"next_page_url\": null,\"key\": \"rooms\",\"page\": 0,\"previous_page_url\": null},\"rooms\": []}"
                                     ));

            var response = RoomResource.Read(client: twilioRestClient);
            Assert.NotNull(response);
        }

        [Test]
        public void TestReadFullResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"meta\": {\"first_page_url\": \"https://insights.twilio.com/v1/Video/Rooms?PageSize=50&Page=0\",\"url\": \"https://insights.twilio.com/v1/Video/Rooms?PageSize=50&Page=0\",\"page_size\": 50,\"next_page_url\": null,\"key\": \"rooms\",\"page\": 0,\"previous_page_url\": null},\"rooms\": [{\"room_type\": \"go\",\"unique_participant_identities\": 0,\"codecs\": [\"VP8\"],\"max_participants\": 0,\"room_sid\": \"RMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"create_time\": \"2015-07-30T20:00:00Z\",\"end_reason\": \"room_ended_via_api\",\"duration_sec\": 50000000,\"room_status\": \"in_progress\",\"media_region\": \"us1\",\"recording_enabled\": false,\"edge_location\": \"Ashburn\",\"max_concurrent_participants\": 0,\"unique_participants\": 0,\"room_name\": \"room_name\",\"created_method\": \"sdk\",\"total_participant_duration_sec\": 50000000,\"status_callback_method\": \"GET\",\"account_sid\": \"ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"end_time\": \"2015-07-30T20:00:00Z\",\"total_recording_duration_sec\": 50000000,\"processing_state\": \"complete\",\"concurrent_participants\": 0,\"status_callback\": \"http://www.example.com\",\"url\": \"https://insights.twilio.com/v1/Video/Rooms/RMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"links\": {\"participants\": \"https://insights.twilio.com/v1/Video/Rooms/RMaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/Participants\"}}]}"
                                     ));

            var response = RoomResource.Read(client: twilioRestClient);
            Assert.NotNull(response);
        }
    }

}