/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using NSubstitute;
using NSubstitute.ExceptionExtensions;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using Twilio.Clients;
using Twilio.Converters;
using Twilio.Exceptions;
using Twilio.Http;
using Twilio.Rest.Verify.V2;

namespace Twilio.Tests.Rest.Verify.V2
{

    [TestFixture]
    public class VerificationAttemptTest : TwilioTest
    {
        [Test]
        public void TestReadRequest()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            var request = new Request(
                HttpMethod.Get,
                Twilio.Rest.Domain.Verify,
                "/v2/Attempts",
                ""
            );
            twilioRestClient.Request(request).Throws(new ApiException("Server Error, no content"));

            try
            {
                VerificationAttemptResource.Read(client: twilioRestClient);
                Assert.Fail("Expected TwilioException to be thrown for 500");
            }
            catch (ApiException) {}
            twilioRestClient.Received().Request(request);
        }

        [Test]
        public void TestListVerificationAttemptsEmptyResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"attempts\": [],\"meta\": {\"key\": \"attempts\",\"page\": 0,\"page_size\": 50,\"first_page_url\": \"https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0\",\"previous_page_url\": null,\"url\": \"https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0\",\"next_page_url\": null}}"
                                     ));

            var response = VerificationAttemptResource.Read(client: twilioRestClient);
            Assert.NotNull(response);
        }

        [Test]
        public void TestListVerificationAttemptsResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"attempts\": [{\"sid\": \"VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"account_sid\": \"ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"service_sid\": \"VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"verification_sid\": \"VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"date_created\": \"2020-08-11T18:36:59Z\",\"date_updated\": \"2020-08-11T18:37:00Z\",\"conversion_status\": \"unconverted\",\"channel\": \"sms\",\"price\": {\"value\": \"0.005\",\"currency\": \"usd\"},\"channel_data\": {\"verification_sid\": \"VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"to\": \"+573003003030\",\"status\": \"unconfirmed\",\"message_status\": \"undelivered\",\"error_code\": \"30008\",\"country\": \"CO\",\"code_length\": 6,\"locale\": \"es\",\"mcc\": \"732\",\"mnc\": \"103\",\"carrier\": \"Colombia Movil (Tigo)\"},\"url\": \"https://verify.twilio.com/v2/Attempts/VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}],\"meta\": {\"key\": \"attempts\",\"page\": 0,\"page_size\": 50,\"first_page_url\": \"https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0\",\"previous_page_url\": null,\"url\": \"https://verify.twilio.com/v2/Attempts?PageSize=50&Page=0\",\"next_page_url\": null}}"
                                     ));

            var response = VerificationAttemptResource.Read(client: twilioRestClient);
            Assert.NotNull(response);
        }

        [Test]
        public void TestFetchRequest()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            var request = new Request(
                HttpMethod.Get,
                Twilio.Rest.Domain.Verify,
                "/v2/Attempts/VLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX",
                ""
            );
            twilioRestClient.Request(request).Throws(new ApiException("Server Error, no content"));

            try
            {
                VerificationAttemptResource.Fetch("VLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", client: twilioRestClient);
                Assert.Fail("Expected TwilioException to be thrown for 500");
            }
            catch (ApiException) {}
            twilioRestClient.Received().Request(request);
        }

        [Test]
        public void TestFetchVerificationAttemptResponse()
        {
            var twilioRestClient = Substitute.For<ITwilioRestClient>();
            twilioRestClient.AccountSid.Returns("ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            twilioRestClient.Request(Arg.Any<Request>())
                            .Returns(new Response(
                                         System.Net.HttpStatusCode.OK,
                                         "{\"sid\": \"VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"account_sid\": \"ACaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"service_sid\": \"VAaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"verification_sid\": \"VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"date_created\": \"2020-08-11T18:36:59Z\",\"date_updated\": \"2020-08-11T18:37:00Z\",\"conversion_status\": \"unconverted\",\"channel\": \"sms\",\"price\": {\"value\": \"0.005\",\"currency\": \"usd\"},\"channel_data\": {\"verification_sid\": \"VEaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\",\"to\": \"+573003003030\",\"status\": \"unconfirmed\",\"message_status\": \"undelivered\",\"error_code\": \"30008\",\"country\": \"CO\",\"code_length\": 6,\"locale\": \"es\",\"mcc\": \"732\",\"mnc\": \"103\",\"carrier\": \"Colombia Movil (Tigo)\"},\"url\": \"https://verify.twilio.com/v2/Attempts/VLaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"}"
                                     ));

            var response = VerificationAttemptResource.Fetch("VLXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX", client: twilioRestClient);
            Assert.NotNull(response);
        }
    }

}